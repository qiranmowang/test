实现 strStr() 函数。

给定一个 haystack 字符串和一个 needle 字符串，在 haystack 字符串中找出 needle 字符串出现的第一个位置 (从0开始)。如果不存在，则返回  -1。

示例 1:

输入: haystack = "hello", needle = "ll"
输出: 2
示例 2:

输入: haystack = "aaaaa", needle = "bba"
输出: -1
说明:

当 needle 是空字符串时，我们应当返回什么值呢？这是一个在面试中很好的问题。

对于本题而言，当 needle 是空字符串时我们应当返回 0 。这与C语言的 strstr() 以及 Java的 indexOf() 定义相符

 
 
第一种(找haystack中等于needle第一个元素的位置在与needle剩下的元素比较，不是则返回循环，这里注意要用个整形记录haystack比较的位置，然后再在那个位置的
下一个位置继续寻找，不然的会出现种特殊情况[比如{ababc，abc}])。
class Solution {
public:
    int strStr(string haystack, string needle) {
        if(needle=="")
            return 0;
        int m=haystack.size();int n=needle.size();
        int t=0;int s=0;int nn;
        while(t<m)
        {
            if(haystack[t]!=needle[0])
                t++;nn=t;
            while(haystack[nn]==needle[s])
            {
                if(s==(n-1))
                    return nn-n+1;
                nn++;s++;
                if(haystack[nn]!=needle[s])
                    t++;
            }
            s=0;
            
        }
       return -1;
        
    }
};
 
第二种 (简化版)
class Solution {
public:
    int strStr(string haystack, string needle) {
        if (needle.empty()) return 0;
        int m = haystack.size(), n = needle.size();
        if (m < n) return -1;
        for (int i = 0; i <= m - n; ++i) {
            int j = 0;
            for (j = 0; j < n; ++j) {
                if (haystack[i + j] != needle[j]) break;
            }
            if (j == n) return i;
        }
        return -1;
    }
};
