/*TinyURL是一种URL简化服务， 比如：当你输入一个URL https://leetcode.com/problems/design-tinyurl 时，它将返回一个简化的URL http://tinyurl.com/4e9iAk.

要求：设计一个 TinyURL 的加密 encode 和解密 decode 的方法。你的加密和解密算法如何设计和运作是没有限制的，你只需要保证一个URL可以被加密成一个TinyURL，并且这个TinyURL可以用解密方法恢复成原本的URL。
*/


class Solution {
public:
      Solution() {
        dict = "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";
       
        srand(time(NULL));
    }


    // Encodes a URL to a shortened URL.
    string encode(string longUrl) {
        if(longg.count(longUrl))
           return "http://tinyurl.com/"+longg[longUrl];
        int shu=0;
        string he="";
        for(int i=0;i<6;i++)
           he+=dict[rand()%62];
           
        while(shortt.count(he))
           {
               he[shu]=dict[rand()%62];
               shu=(shu+1)%5;
           }
        shortt[he]=longUrl;
        longg[longUrl]=he;
        return "http://tinyurl.com/"+he;
        
     }

    // Decodes a shortened URL to its original URL.
    string decode(string shortUrl) {
        string sshort=shortUrl.substr(shortUrl.find_last_of("/")+1);
        return shortt.count(sshort)?shortt[sshort]:shortUrl;
    }
private:
    unordered_map<string, string>shortt, longg;
    string dict;
};

// Your Solution object will be instantiated and called as such:
// Solution solution;
// solution.decode(solution.encode(url));
