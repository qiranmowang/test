第一种 利用贪婪算法
class Solution {
public:
    string intToRoman(int num) {
        vector<int>n{1000,900,500,400,100,90,50,40,10,9,5,4,1};
        vector<string>l{"M", "CM", "D", "CD", "C", "XC", "L", "XL", "X", "IX", "V", "IV", "I"};
        string se="";
        for(int s=0;s<n.size();s++)
            while(num>=n[s])
            {
                num-=n[s];
                se+=l[s];
            }
        return se;
        
    }
};

 
第二种 有点投机取巧，把需要的个位十位百位千位全列出来匹配就ok了
class Solution {
public:
    string intToRoman(int num) {
        string res = "";
        vector<string> v1{"", "M", "MM", "MMM"};
        vector<string> v2{"", "C", "CC", "CCC", "CD", "D", "DC", "DCC", "DCCC", "CM"};
        vector<string> v3{"", "X", "XX", "XXX", "XL", "L", "LX", "LXX", "LXXX", "XC"};
        vector<string> v4{"", "I", "II", "III", "IV", "V", "VI", "VII", "VIII", "IX"};
        return v1[num / 1000] + v2[(num % 1000) / 100] + v3[(num % 100) / 10] + v4[num % 10];
    }
};
